// В новом файле js / stat.js определите функцию renderStatistics, которая будет являться методом объекта window, со следующими аргументами:

// ctx — канвас на котором рисуется игра.
//   names — массив, с именами игроков прошедших уровень.Имя самого игрока — Вы.Массив имён формируется случайным образом.
//     times — массив, по длине совпадающий с массивом names.Массив содержит время прохождения уровня соответствующего игрока из массива names.
// Время прохождения уровня задано в миллисекундах.

// Эта функция будет вызываться каждый раз когда игрок проходит уровень.Чтобы успешно пройти уровень, надо выстрелить фаерболом(клавиша Shift) в забор.

// var window.renderStatistics = function (ctx, names, times) {

// };

// облако fillRect
// {
//   координатами[100, 10],
//     высотой 270px
//   шириной 420px
// }

// тень fillRect
// {
//   высотой 270px
//   шириной 420px
//   цветом rgba(0, 0, 0, 0.7)
//   смещённый на 10px вниз и вправо
// }

// гистограммы
// {
//   Высота гистограммы 150px.
//   Ширина колонки 40px.
//   Цвет колонки игрока Вы rgba(255, 0, 0, 1).
//   Цвет колонок других игроков — синий, а насыщенность задаётся случайным образом.
//   Времена игроков располагаются над колонками.
//   Имена игроков — под колонками гистограммы.
// }

// В rgba последний параметр — это прозрачность, а не насыщенность.Поэтому для задания цвета колонок других игроков нужно использовать hsl.Для перевода
// цветов из rgba в hsl вы можете использовать, например, вот этот конвертер, там же можно вспомнить особенности разных цветовых форматов или пересмотреть
// часть про операции с цветом в лекции «Препроцессоры и автоматизация» курса «HTML и CSS.Адаптивная вёрстка и автоматизация».

'use strict';

window.renderStatistics = function (ctx) {
  ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';
  ctx.fillRect(110, 60, 500, 200);

  ctx.fillStyle = '#fff';
  ctx.fillRect(100, 50, 500, 200);
};

console.log('hello');
